{"version":3,"sources":["ng://ng2-carouselamos/lib/ng2-carouselamos.component.ts","ng://ng2-carouselamos/lib/ng2-carouselamos.module.ts"],"names":["Ng2CarouselamosComponent","this","items","width","onSelectedItem","EventEmitter","childIndex","amount","startPress","lastX","prototype","onMousedown","e","which","clientX","onTouchdown","navigator","userAgent","indexOf","preventDefault","targetTouches","onMousemove","maxWidth","onTouchmove","onMouseup","elem","snap","onTouchup","counter","lastVal","i","length","el","children","style","currentStyle","window","getComputedStyle","offsetWidth","parseFloat","marginLeft","marginRight","emit","item","index","first","scroll","forward","calcScroll","ngOnChanges","changes","isEqual","previousValue","currentValue","firstChange","Component","args","selector","template","Input","Output","Ng2CarouselamosModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n  SimpleChanges\n} from \"@angular/core\";\nimport isEqual from \"lodash.isequal\";\n\nexport interface SelectedItemInterface {\n  item: any;\n  index: number;\n  first: boolean;\n}\n\n@Component({\n  selector: \"[ng2-carouselamos]\",\n  styleUrls: [\"./ng2-carouselamos.component.scss\"],\n  templateUrl: \"./ng2-carouselamos.component.html\"\n})\n/*\n *\n * @param() items - List of items to belong in carousel\n * @param() width - Size of window(view) to show\n * @param() $prev - Template for previous button\n * @param() $next - Template for next button\n * @param() $item - Template for the item\n */\nexport class Ng2CarouselamosComponent {\n  @Input() items: Array<any> = [];\n  @Input() width: number = 500;\n  @Input() $prev: TemplateRef<any>;\n  @Input() $next: TemplateRef<any>;\n  @Input() $item: TemplateRef<any>;\n  @Output() onSelectedItem: EventEmitter<\n    SelectedItemInterface\n  > = new EventEmitter();\n  childIndex: number = 0;\n  amount: number = 0;\n  startPress: number = 0;\n  lastX: number = 0;\n\n  onMousedown(e: MouseEvent) {\n    if (e.which === 1) {\n      this.startPress = e.clientX;\n      this.lastX = this.amount;\n    }\n  }\n  onTouchdown(e: TouchEvent) {\n    if (navigator.userAgent.indexOf(\"Android\") >= 0) e.preventDefault();\n    this.startPress = e.targetTouches[0].clientX;\n    this.lastX = this.amount;\n  }\n\n  onMousemove(e: MouseEvent, maxWidth: number) {\n    if (e.which === 1) {\n      const amount = this.lastX - (this.startPress - e.clientX);\n      if (amount > 0 || amount < -(maxWidth - this.width)) return;\n      this.amount = amount;\n    }\n  }\n  onTouchmove(e: TouchEvent, maxWidth: number) {\n    if (navigator.userAgent.indexOf(\"Android\") >= 0) e.preventDefault();\n    const amount = this.lastX - (this.startPress - e.targetTouches[0].clientX);\n    if (amount > 0 || amount < -(maxWidth - this.width)) return;\n    this.amount = amount;\n  }\n\n  onMouseup(e: MouseEvent, elem: any) {\n    if (e.which === 1) {\n      this.startPress = 0;\n      this.snap(elem);\n    }\n  }\n\n  onTouchup(e: TouchEvent, elem: any) {\n    if (navigator.userAgent.indexOf(\"Android\") >= 0) e.preventDefault();\n    this.startPress = 0;\n    this.snap(elem);\n  }\n\n  snap(elem: any) {\n    let counter = 0;\n    let lastVal = 0;\n    for (let i = 0; i < this.items.length; i++) {\n      const el = elem.children[i];\n      const style = el.currentStyle || window.getComputedStyle(el);\n      counter +=\n        el.offsetWidth +\n        (parseFloat(style.marginLeft) + parseFloat(style.marginRight));\n      if (this.amount <= lastVal && this.amount >= -counter) {\n        this.amount = -lastVal;\n        this.childIndex = i;\n        this.onSelectedItem.emit({\n          item: this.items[this.childIndex],\n          index: this.childIndex,\n          first: false\n        });\n        return;\n      }\n      lastVal = counter;\n    }\n    return counter;\n  }\n\n  scroll(forward: boolean, elem: any) {\n    this.childIndex += forward ? 1 : -1;\n    this.onSelectedItem.emit({\n      item: this.items[this.childIndex],\n      index: this.childIndex,\n      first: false\n    });\n    this.amount = -this.calcScroll(elem);\n  }\n\n  calcScroll(elem: any) {\n    let counter = 0;\n    for (let i = this.childIndex - 1; i >= 0; i--) {\n      const el = elem.children[i];\n      const style = el.currentStyle || window.getComputedStyle(el);\n      counter +=\n        el.offsetWidth +\n        (parseFloat(style.marginLeft) + parseFloat(style.marginRight));\n    }\n    return counter;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.items &&\n      !isEqual(changes.items.previousValue, changes.items.currentValue)\n    ) {\n      if (changes.items.firstChange) {\n        this.onSelectedItem.emit({\n          item: this.items[this.childIndex],\n          index: this.childIndex,\n          first: true\n        });\n      }\n      this.amount = 0;\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { Ng2CarouselamosComponent } from \"./ng2-carouselamos.component\";\n\n@NgModule({\n  declarations: [Ng2CarouselamosComponent],\n  imports: [CommonModule],\n  exports: [Ng2CarouselamosComponent]\n})\nexport class Ng2CarouselamosModule {}\n"]}